import requests
import vk_api
from vk_api.utils import get_random_id
from moviepy.editor import VideoFileClip
import io

v = '5.199'
group_id = ''  
access_token = ''  
upload_url = None
upload_result = None
link_text = [
to_store, vote more, book, order, enrol, fill, signup, buy, ticket, write, open, learn_more, view, go_to, contact, watch, play, install, read 
]
#
#to_store — В магазин.
#vote — Голосовать.
#more — Ещё.
#book — Забронировать.
#order — Заказать.
#enroll — Записаться.
#fill — Заполнить.
#signup — Зарегистрироваться.
#buy — Купить.
#ticket — Купить билет.
#write — Написать.
#open — Открыть.
#learn_more — Подробнее. Значение используется по умолчанию.
#view — Посмотреть.
#go_to — Перейти.
#contact — Связаться.
#watch — Смотреть.
#play — Слушать.
#install — Установить.
#read — Читать.
def first():
    global upload_url  
    url = 'https://api.vk.com/method/stories.getVideoUploadServer'


    params = {
        'v': v,
        'access_token': access_token,
        'add_to_news': 1,
        'group_id': group_id,
        'link_text' : link_text
    }

    response = requests.get(url, params=params)

    if response.status_code == 200:
        data = response.json()
        upload_url = data['response']['upload_url']
        return upload_url

def second():
    global upload_result  

    files = {
        'file': ('video.mp4', open('', 'rb'))  #нужно сделать, чтобы грузило загруженный видос
    }
    video_clip = VideoFileClip(io.BytesIO(files))
    duration = video_clip.duration
    aspect_ratio = video_clip.size[0] / video_clip.size[1]
    video_clip.close()

    if duration > 15 or aspect_ratio != 9 / 16:
        print('Неверная длительность или соотношение сторон видео. Загрузка отменена.')
        return
    response = requests.post(upload_url, files=files)

    if response.status_code == 200:
        data = response.json()
        upload_result = data['response'].get('upload_result')
        return upload_result

def third():
    url = 'https://api.vk.com/method/stories.save'

    params = {
        'access_token': access_token,
        'upload_results': upload_result,
        'v': v,
    }

    response = requests.post(url, params=params)

    if response.status_code == 200:
        data = response.json()
        print(data)


if __name__ == '__main__':
    first()
    second()
    third()
